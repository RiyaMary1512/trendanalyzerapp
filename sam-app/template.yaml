AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON

Resources:
  trendanalyzerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: trendanalyzer/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        trendanalyzerget:
          Type: Api
          Properties:
            Path: /trendanalyzer
            Method: get
            RestApiId: !Ref Api
        trendanalyzerpost:
          Type: Api
          Properties:
            Path: /trendanalyzer
            Method: post
            RestApiId: !Ref Api
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
        - AmazonAPIGatewayPushToCloudWatchLogs
        - AmazonAPIGatewayInvokeFullAccess
        - AWSXrayWriteOnlyAccess
  DynamoDBTableHashtag:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "PostDataTable"
      BillingMode: "PROVISIONED"
      SSESpecification:
        SSEEnabled: false
      ContributorInsightsSpecification:
        Enabled: false
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      ProvisionedThroughput:
        WriteCapacityUnits: 1
        ReadCapacityUnits: 1
      KeySchema:
        - AttributeName: "post_data"
          KeyType: "HASH"
      AttributeDefinitions:
        - AttributeName: "post_data"
          AttributeType: "S"
      TableClass: "STANDARD"
      Tags: []
      TimeToLiveSpecification:
        Enabled: false

  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}-Api"
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /trendanalyzer:
            get:
              x-amazon-apigateway-integration:
                  type: aws_proxy
                  uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${trendanalyzerFunction.Arn}/invocations
                  httpMethod: GET
                  payloadFormatVersion: "2.0"
              responses:
                '200':
                  description: Successful response
                '400':
                  description: Bad request
                '500':
                  description: Internal server error
            post:
              x-amazon-apigateway-integration:
                  type: aws
                  uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${trendanalyzerFunction.Arn}/invocations
                  httpMethod: POST
                  payloadFormatVersion: "2.0"
              responses:
                '200':
                  description: Successful response
                '400':
                  description: Bad request
                '500':
                  description: Internal server error
              IntegrationResponses:
                - StatusCode: "200"
                  ResponseParameters:
                    "method.response.header.Content-Type": "'application/json'"
                  ResponseTemplates:
                    application/json: |
                      {
                          "statusCode": $statusCode,
                          "body": $input.json('$'),
                          "headers": {
                              "Content-Type": "application/json"
                          }
                      }
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub "ApplicationInsights-SAM-${AWS::StackName}"
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  trendanalyzerApi:
    Description: API Gateway endpoint URL for Prod stage for trendanalyzer function
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod/trendanalyzer/"

  trendanalyzerFunction:
    Description: trendanalyzer Lambda Function ARN
    Value: !GetAtt trendanalyzerFunction.Arn

  trendanalyzerFunctionIamRole:
    Description: Implicit IAM Role created for trendanalyzer function
    Value: !GetAtt trendanalyzerFunctionRole.Arn